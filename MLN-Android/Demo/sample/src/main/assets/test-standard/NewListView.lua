---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by David.
--- DateTime: 2018/5/14 下午12:25
---



datasouce = {
    headIconName = "http://img.momocdn.com/album/4F/CF/4FCFA0D2-95E8-3C09-3760-142E6916CA1B20170701_S.jpg",
    summary = "安全等级：高",
    sections = {
        {
            sectionTitle = "通过以下设置可以提高安全等级",
            items = {
            }
        },

    }
}
Printer:printTable(ContentMode)
print('Printer, ', ContentMode.SCALE_ASPECT_FIT)
size = window:size()

local collectionView = TableView(true, true)
collectionView:setContentInset(0,0,0,200)
local adapter = TableViewAdapter()
collectionView:loadThreshold(0.5)
adapter:initCell(function(cell)
    local normalCell = require("cells.MomentNormalCell")
    normalCell:onCreate(cell, nil)
end)
adapter:fillCellData(function(cell, section, row)
    local normalCell = require("cells.MomentNormalCell")
    local section = datasouce.sections[section]
    local items = section.items;
    local detailItem = items[row]
    normalCell:onLayout(cell, detailItem)
end)
adapter:sectionCount(function()
    return 2
end)
adapter:rowCount(function(section)
    print('rowcount ', section)
    if section == 1 then
        local sections = datasouce.sections;
        --找到对应的组
        return #sections[section].items
    end
    return 0
end)
adapter:selectedRow(function(cell, section, row)
    print('onclick', section, row)
    if row % 3 == 0 then
        collectionView:startRefreshing()
    end
end)
adapter:heightForCell(function(section, row)
    local section = datasouce.sections[section]
    local items = section.items;
    return items[row].height
end)
adapter:cellWillAppear(function(cell, s, r)
    print('cell appear ', r)
end)
collectionView:adapter(adapter)
collectionView:setRefreshingCallback(function()
    print('开始刷新')
    TimeManager:setTimeOut(function()
        print("timer 完成")
        collectionView:stopRefreshing()
        collectionView:stopLoading()
        --collectionView:resetLoading()
        collectionView:reloadData()
    end, 1)
end)
collectionView:setLoadingCallback(function()
    print('开始加载')
    TimeManager:setTimeOut(function()
        local g = require('cells.ItemGenerator')
        local items = datasouce.sections[1].items
        local old = #items + 1
        g:insert(items, 10)
        collectionView:reloadData()
        --collectionView:insertCellsAtSection(1, old, 9 + old)
        collectionView:stopRefreshing()
        collectionView:stopLoading()
        --collectionView:noMoreData()
        --collectionView:loadEnable(false)
    end, 1)
end)
collectionView:setScrollingCallback(function(x, y)
    --print('滚动中', x, y)
end)
collectionView:setScrollBeginCallback(function()
    --print('开始滚动')
end)
collectionView:setScrollEndCallback(function(x, y)
    print('滚动结束', x,":", y)
end)
collectionView:setEndDraggingCallback(function(x, y)
    --print('end dragging', x, y)
end)
collectionView:setStartDeceleratingCallback(function(x, y)
    --print('dece', x, y)
end)

collectionView:frame(Rect(0, 0, size:width(), size:height()))
window:addView(collectionView)
collectionView:showScrollIndicator(true)
--collectionView:reload()
