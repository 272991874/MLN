---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by XiongFangyu.
--- DateTime: 2018/12/4 上午10:39
---

datasouce = {
    headIconName = "http://img.momocdn.com/album/4F/CF/4FCFA0D2-95E8-3C09-3760-142E6916CA1B20170701_S.jpg",
    summary = "安全等级：高",
    sections = {
        {
            sectionTitle = "通过以下设置可以提高安全等级",
            items = {

            }
        },

    }
}
local normalCell = require("cells.MomentNormalCell")
local size = window:size()
screen_w = size:width() - 10
screen_h = size:height()

local lineSpacing = 10
local itemSpace = 10
local halfH = screen_h / 5
local halfW = screen_w / 3 - lineSpacing

local collectionView = CollectionView(true, true)
collectionView:scrollDirection(ScrollDirection.VERTICAL)

collectionView:width(screen_w):height(screen_h):x(5)
window:addView(collectionView)

local layout = CollectionViewLayout()
layout:lineSpacing(lineSpacing)
layout:itemSpacing(itemSpace)
layout:itemSize(Size(halfW, halfH))
--layout:itemSize(Size(halfW, 100))
collectionView:layout(layout)
local adapter = CollectionViewAdapter()
adapter:sectionCount(function()
    return 1
end)
adapter:rowCount(function(section)
    local sections = datasouce.sections;
    --找到对应的组
    return #sections[section].items
end)
--adapter:reuseId(function(section, row)
--    return "1"
--end)
adapter:initCell(function(cell, section, row)
    normalCell:onCreate(cell, nil)
end)
adapter:fillCellData(function(cell, section, row)
    local section = datasouce.sections[section]
    local items = section.items;
    local detailItem = items[row]
    normalCell:onLayout(cell, detailItem)
end)
adapter:sizeForCell(function(s, r)
    return Size(halfW, halfH)
    --return Size(halfW, h)
end)
collectionView:adapter(adapter)

collectionView:setRefreshingCallback(function()

    print('开始刷新')
    TimeManager:setTimeOut(function()
        print("timer 完成")
        collectionView:stopRefreshing()
        collectionView:resetLoading()
        local g = require('cells.ItemGenerator')
        local items = datasouce.sections[1].items
        local old = #items + 1
        g:insert(items, 10)
        --collectionView:reloadData()
        collectionView:insertCellsAtSection(1, old, 9 + old)
        --collectionView:noMoreData()
        --collectionView:loadEnable(false)
        collectionView:reloadData()
    end, 1)
end)
collectionView:setLoadingCallback(function()
    print('开始加载')
    TimeManager:setTimeOut(function()
        local g = require('ui.demo.cells.ItemGenerator')
        local items = datasouce.sections[1].items
        local old = #items + 1
        g:insert(items, 10)
        --collectionView:reloadData()
        collectionView:insertCellsAtSection(1, old, 9 + old)
        collectionView:stopLoading()
        --collectionView:noMoreData()
        --collectionView:loadEnable(false)
    end, 1)
end)

collectionView:startRefreshing()
local topView = View():width(MeasurementType.MATCH_PARENT):height(100):bgColor(Color(255,255,255,1))
collectionView:addView(topView)