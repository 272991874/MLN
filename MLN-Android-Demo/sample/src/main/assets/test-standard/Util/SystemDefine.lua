---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by momo.
--- DateTime: 2018/11/15 下午9:06
---


kStatusBarHeight    = System:stateBarHeight()
--kNavBarHeight       = System:navBarHeight()
kNavBarHeight       = 85 - kStatusBarHeight
kScreenWidth        = System:screenSize():width()
kScreenHeight       = System:screenSize():height()

IS_IOS = System:iOS()
IS_Android = not IS_IOS

if IS_Android then
    kNavBarHeight = 56

    local tmpHeight = window:height()
    if tmpHeight == kScreenHeight then
        kScreenHeight = kScreenHeight - kStatusBarHeight
    else
        kScreenHeight = tmpHeight
    end

    kStatusBarHeight = 0
end


-- color

WHITE       = Color(255, 255, 255, 1)
WHITE_250   = Color(250, 250, 250, 1)
WHITE_245   = Color(245, 245, 245, 1)
WHITE_240   = Color(240, 240, 240, 1)
WHITE_235   = Color(235, 235, 235, 1)
WHITE_230   = Color(230, 230, 230, 1)

DARK        = Color(0, 0, 0, 1)


-- function

-- 快速点击防护
function luaSafeClick()
    if safe_click_view_lua == nil then
        safe_click_view_lua = View()
        safe_click_view_lua:frame(Rect(0, 0, kScreenWidth, kScreenHeight));
        safe_click_view_lua:bgColor(CLEAR)
        safe_click_view_lua:onClick(function()
            print("重复点击")
        end)
    end

    window:addView(safe_click_view_lua)
    System:setTimeOut(function()
        safe_click_view_lua:removeFromSuper()
    end, 0.1)
end

-- 缓存table --
color_cache_table = {}


-- 通过RGB字符串创建color并缓存，要求：R、G、B通过‘,’分割
-- 例如："233,180,50"，alpha为1
function ColorWithRGBString(rgbStr)
    if rgbStr == nil then
        return Color(230, 230, 230, 0)
    end

    if color_cache_table[rgbStr] then
        return color_cache_table[rgbStr]
    end

    local rgb = splitString(rgbStr,',')
    if #rgb < 3 then
        rgb = {235,235,235}
    end
    local color = Color(tonumber(rgb[1] ), tonumber(rgb[2]), tonumber(rgb[3]), 1)

    -- color缓存
    color_cache_table[rgbStr] = color

    return color
end


-- 通过RGBA字符串创建color并缓存，要求：R、G、B、A 通过‘,’分割
-- 例如："233,180,50,0.5"
function ColorWithRGBAString(rgbaStr)
    if rgbaStr == nil then
        return Color(0, 0, 0, 0)
    end

    if color_cache_table[rgbaStr] then
        return color_cache_table[rgbaStr]
    end

    local rgba = splitString(rgbaStr,',')
    if #rgba < 4 then
        rgba = {235,235,235,0}
    end
    local color = Color(rgba[1], rgba[2], rgba[3], rgba[4])

    -- color缓存
    color_cache_table[rgbaStr] = color

    return color
end


-- 字符串分割

function splitString(str, c)
    local arr = {}
    string.gsub(str, '[^'..c..']+', function(w)
        arr[#arr+1] = w
    end )
    return arr
end