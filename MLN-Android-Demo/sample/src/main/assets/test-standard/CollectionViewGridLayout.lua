---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Feng.
--- DateTime: 2019/2/15 下午3:51
---


screen_h = window:height() - 64

screen_w = window:width()
screen_h = window:height()
oneWidth = screen_w/4 - 10
oneHeight = screen_h/4


window:bgColor(Color(255, 255, 255, 1))

itemSpacing = 20
lineSpacing = 20
padding = 20

singlewidth = (screen_w - itemSpacing *2 - padding * 2)/3


cellSize = {Size(singlewidth, 200), Size(singlewidth, 200), Size(singlewidth, 200), Size(singlewidth, 200), Size(365, 200), Size(singlewidth, 200),Size(singlewidth, 200), Size(singlewidth, 200), Size(singlewidth, 200), Size(singlewidth, 200)}
collectionView =  CollectionView()
collectionView:frame(Rect(0, 64, window:width(), screen_h))
collectionView:bgColor(Color(255, 255, 255, 1))


--- layout
 layout = CollectionViewGridLayout()
layout:spanCount(3)
layout:lineSpacing(lineSpacing)
layout:itemSpacing(itemSpacing)

-- TODO   API 中没有    后续我需要兼容
--layout:itemSize(Size(oneWidth, oneHeight))

-- TODO  边距，我需要调整额 itemdecoration
layout:layoutInset(padding, padding,padding , padding)

collectionView:layout(layout)

--- adapter
adapter = CollectionViewAdapter()
adapter:sectionCount(function()
    return 1
end)

adapter:rowCount(function(sectionidx)
    return 10
end)

adapter:initCell(function(cell)
    local contentView = cell.contentView
    contentView:bgColor(Color(57, 175, 202, 1))
    local width = contentView:width()
    local height = contentView:height()
    cell.label = Label()
    cell.label:frame(Rect(0, 0, width, height))
    cell.label:textAlign(TextAlign.CENTER)
    cell.label:lines(0)
    contentView:addView(cell.label)
    cell.image = ImageView()
    cell.image:frame(Rect(0, 0, width, height))
    contentView:addView(cell.image)
end)

adapter:fillCellData(function(cell, section, row)
    local contentView = cell.contentView
    local width = contentView:width()
    local height = contentView:height()
    --cell.image:image("my.jpg")
    cell.image:cornerRadius(width * 0.5)
    cell.label:text("Reuse cell | section" .. section .. "row" .. row)
end)

adapter:selectedRow(function(cell, section, row)

    local txt = "be selected, section:" .. section .. "row:" .. row
    cell.label:text(txt)
end)


size = Size()
size:width(30)
size:height(100)

adapter:sizeForCell(function(section, row)
    local idx = row
    print('cell size --------', row % 11, cellSize[row % 11])
    return cellSize[row % 11]
end)

collectionView:adapter(adapter)
window:addView(collectionView)
