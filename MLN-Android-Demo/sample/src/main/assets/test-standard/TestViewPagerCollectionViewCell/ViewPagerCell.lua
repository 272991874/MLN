---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by momo.
--- DateTime: 2018/11/15 下午9:02
---
--- 作为ViewPager的cell，内部为colleciton view
---

local CollectionViewCell = require("TestViewPagerCollectionViewCell.CollectionViewCell")

local ViewPagerCell = {}

local itemWidth = math.floor(kScreenWidth - 5) / 3 -5

local itemHeight = math.floor((itemWidth * 212) / 180)     -- 根据设计稿按比例计算

local kNormalCellReuseID = "normal_cell_reuse_id"
local kNoMoreDataReuseID = "no_more_data_reuse_id"

function ViewPagerCell:new(o)
    o = o or {}
    setmetatable(o, self)
    self.__index = self
    return o
end

function ViewPagerCell:createSubview(height)
    self.height = height

    self.layout = CollectionViewLayout()

    print(('itemWidth = '..itemWidth..('    kScreenWidth ='..kScreenWidth)))

    self.layout:itemSize(Size(itemWidth, itemHeight))

    self.layout:lineSpacing(5)

    self.layout:itemSpacing(5)  -- 如果是竖向滑动，则代表垂直方向数值，上下2行之间距离

    self:createCollectionAdapter()

    self.contentView = CollectionView(true, false)


    self.contentView:setScrollingCallback(function (x,y)
        print('y  =  ',y)

    end)

    self.contentView:layout(self.layout)
    self.contentView:scrollDirection(ScrollDirection.VERTICAL)

    self.contentView:refreshEnable(true)
    self.contentView:loadEnable(false)

     self.contentView:setScrollEnable(false)


    self.contentView:adapter(self.adapter)

    self.contentView:setScrollEndCallback(
            function(x, y,position)
                -- Toast("是否滑动到 底部 或 顶部      " .. tostring(position), 1)
            end
    )

    self.contentView:setRefreshingCallback(function()
        self:refreshData()
    end)


    self.contentView:setLoadingCallback(function()

        if NetworkReachability:networkState() == 1 then
            self.contentView:loadError()
            return
        end

        self:loadMoreData()
    end)


end

function ViewPagerCell:createCollectionAdapter()
    self.adapter = CollectionViewAdapter()

    self.adapter:sectionCount(function()
        return 1
    end)

    self.adapter:rowCount(function(section)
        if self.itemArray then
            if self.itemArray:size() > 0 then
                return self.itemArray:size()
            end

            return 1
        end

        return 0
    end)

    self.adapter:reuseId(function(section, row)
        if self.itemArray then
            if self.itemArray:size() > 0 then
                return kNormalCellReuseID
            end

            return kNoMoreDataReuseID
        end

        return ""
    end)

    self.adapter:sizeForCell(function(section, row)
        if self.itemArray:size() > 0 then
            return Size(itemWidth, itemHeight)
        end
        return Size(kScreenWidth, kScreenHeight - kNavBarHeight - kStatusBarHeight - 50)
    end)

    self.adapter:initCellByReuseId(kNormalCellReuseID, function(cell)
        cell.m_cell = CollectionViewCell:new()
        cell.m_cell:createSubview(Size(itemWidth, itemHeight))
        cell.contentView:addView(cell.m_cell.contentView)
    end)

    self.adapter:initCellByReuseId(kNoMoreDataReuseID, function(cell)
        cell.alertBg = View()
        cell.alertBg:bgColor(WHITE_240)
        cell.alertBg:width(200):height(150):setGravity(Gravity.CENTER):marginBottom(50)
        cell.alertBg:onClick(function()
            luaSafeClick()

            self.contentView:startRefreshing()
            self.contentView:loadEnable(false)
        end)

        cell.imageView = ImageView()
        cell.imageView:width(53):height(53):setGravity(Gravity.CENTER_HORIZONTAL):marginTop(30)
        cell.imageView:image("https://s.momocdn.com/w/u/others/2018/10/30/1540905246613-no-record.png")

        cell.label = Label()
        cell.label:text("暂无数据，点击刷新")
        cell.label:setWrapContent(true):setGravity(Gravity.CENTER_HORIZONTAL):marginTop(100)

        cell.alertBg:addView(cell.imageView):addView(cell.label)
        cell.contentView:addView(cell.alertBg)
    end)

    self.adapter:fillCellDataByReuseId(kNormalCellReuseID, function(cell, section, row)
        local item = self.itemArray:get(row)
        cell.m_cell:fillData(item)
    end)

    self.adapter:selectedRowByReuseId(kNormalCellReuseID, function(cell, section, row)
        Toast("Click item: " .. self.title, 1)
        self.contentView:setScrollEnable(true)

        self.contentView:startRefreshing()
        self.contentView:reloadData()

    end)

    --[[ self.adapter:longPressRowByReuseId(kNormalCellReuseID, function(cell, section, row)
        Toast("long  long  long  Click item: " .. self.title.."section = "..tostring(section).." row = "..tostring(row), 1)
    end)

    --]]

    self.adapter:longPressRow(function(cell, section, row)
        Toast("long  long  long  Click item: " .. self.title.."section = "..tostring(section).." row = "..tostring(row), 1)
    end)


    self.adapter:fillCellDataByReuseId(kNoMoreDataReuseID, function(cell, section, row) end)
    self.adapter:selectedRowByReuseId(kNoMoreDataReuseID, function(cell, section, row) end)
end

-------------------------------- request --------------------------------

function ViewPagerCell:refreshData()
    self.itemArray = self.itemArray or Array()
    self.itemArray:removeAll()
    load_count = 1

    System:setTimeOut(function()
        --if math.random(3) == 1 then
        --    self.contentView:stopRefreshing()
        --    self.contentView:reloadData()
        --    self.contentView:loadEnable(false)
        --
        --    Toast("模拟无数据", 1)
        --else
        --end
        local arr = self:demoData(20)
        self.itemArray:addAll(arr)

        self.contentView:stopRefreshing()
        self.contentView:reloadData()
        self.contentView:resetLoading()
        if not self.contentView:loadEnable() then
            self.contentView:loadEnable(true)
        end
    end, 0.5)
end

function ViewPagerCell:loadMoreData()
    load_count = load_count or 1

    System:setTimeOut(function()
        self.contentView:stopLoading()

        local total = self.itemArray:size()
        local data = self:demoData(20)
        self.itemArray:addAll(data)
        self.contentView:insertCellsAtSection(1, total + 1, self.itemArray:size())

        if load_count % 8 == 0 then
            self.contentView:noMoreData()
            load_count = 1
        else
            load_count = load_count + 1
        end
    end, 0.5)
end

function ViewPagerCell:checkRefresh()
    if self.itemArray == nil or self.itemArray:size() == 0 then
        self.contentView:startRefreshing()
    end
end

function ViewPagerCell:demoData(count)
    self:configDemo()
    local array = Array()

    local base = math.random(8)

    for i = 1, count do
        local j = (base + i) % 8 + 1
        local map = Map()

        map:put("background_color", self.demoColor:get(j))
        map:put("desc", "6人")

        local game_status = 1
        if self.title == "KTV" then
            --game_status = 1
        elseif self.title == "游戏" then
            game_status = math.random(2) + 1
        else
            game_status = math.random(6)
        end
        map:put("game_status", game_status)


        local topic = Map()
        topic:put("icon", self.demoIcon:get(j))
        topic:put("text", self.demoRoomName:get(j))

        local gender = "F"
        if math.random(20) % 3 == 0 then
            gender = "M"
        end

        local user = Map()
        user:put("name", self.demoNickName:get(j))
        user:put("sex", gender)
        user:put("momoid", "643820238")

        map:put("user", user)
        map:put("topic", topic)

        array:add(map)
    end

    return array
end

function ViewPagerCell:configDemo()
    if self.demoNickName == nil then
        self.demoNickName = Array()
        self.demoNickName:add("韩")
        self.demoNickName:add("韩仙")
        self.demoNickName:add("韩韩小小")
        self.demoNickName:add("韩韩小仙儿儿")
        self.demoNickName:add("韩韩小小仙仙儿")
        self.demoNickName:add("韩韩小小仙仙儿儿")
        self.demoNickName:add("韩韩小小小小仙仙儿儿")
        self.demoNickName:add("韩韩小小小小小小仙仙儿儿")
    end

    if self.demoIcon == nil then
        self.demoIcon = Array()
        self.demoIcon:add("http://img.momocdn.com/album/23/67/23673D01-17EC-738E-C5A4-28013F88B6F520180818_250x250.webp")
        self.demoIcon:add("http://img.momocdn.com/album/4A/5D/4A5D770E-5504-56FB-8A31-4F1D54C95F4A20181027_250x250.webp")
        self.demoIcon:add("http://img.momocdn.com/album/89/36/8936A76E-A95A-D826-78F2-F443EA95962F20181114_250x250.webp")
        self.demoIcon:add("http://img.momocdn.com/album/31/98/31989A82-AA47-1AA7-2DA9-F54254D42E2920181116_250x250.webp")
        self.demoIcon:add("http://img.momocdn.com/album/6C/33/6C331BD4-391B-78A9-2B9A-4463BBA9363B20180118_250x250.webp")
        self.demoIcon:add("http://img.momocdn.com/album/90/07/90071990-2F3B-FB34-0B0F-67EAA8C7F8ED20181113_250x250.webp")
        self.demoIcon:add("http://img.momocdn.com/album/55/F5/55F5599B-A789-92A9-E6D9-75E1A7A0A0B620181116_250x250.webp")
        self.demoIcon:add("http://img.momocdn.com/album/C6/02/C6022764-8495-FC7A-2342-A2979B44893120181114_250x250.webp")
    end

    if self.demoRoomName == nil then
        self.demoRoomName = Array()
        self.demoRoomName:add("哈")
        self.demoRoomName:add("a")
        self.demoRoomName:add("爱聊天")
        self.demoRoomName:add("爱聊天的孩子")
        self.demoRoomName:add("爱聊天的孩子运气")
        self.demoRoomName:add("爱聊天的孩子运气不会太差")
        self.demoRoomName:add("爱聊天的孩子运气不会不会太差")
        self.demoRoomName:add("爱聊天的孩子运气不会太差不会太差不会太差不会太差不会太差")
    end

    if self.demoColor == nil then
        self.demoColor = Array()
        self.demoColor:add("223,111,255")
        self.demoColor:add("255,201,59")
        self.demoColor:add("61,211,255")
        self.demoColor:add("16,225,166")
        self.demoColor:add("255,201,59")
        self.demoColor:add("223,111,255")
        self.demoColor:add("16,225,166")
        self.demoColor:add("61,211,255")
    end
end

return ViewPagerCell